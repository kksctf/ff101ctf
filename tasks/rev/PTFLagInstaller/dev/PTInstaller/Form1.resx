<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>The Free Software License (CTF) Copyright © 2021 @greg0r0 (George Zaytsev)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and its documentation files (the “Software”), to deal in the Software without restriction, provided that the above copyright notice(s) and this permission notice appear in all copies of the Software and to cause each and every such copy or partial copy to be identified as coming from the original Software. The Software is provided “as is”, without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall the copyright owner or contributors be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software. 

Permission is hereby granted, free of charge, to any individual or organization obtaining a Capture The Flag (CTF) flag, referred to as the "Flag", associated with a computer security competition, to use, copy, modify, merge, publish, and distribute the Flag, subject to the following conditions:

1. The Flag is provided "as is", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose, and non-infringement. In no event shall the authors or copyright holders be liable for any claim, damages, or other liability, whether in an action of contract, tort, or otherwise, arising from, out of, or in connection with the Flag or the use or other dealings in the Flag.

2. The Flag may be modified or altered to suit the needs of the user, but the modifications should not misrepresent the original intent or undermine the integrity of the CTF competition the Flag is associated with. Any modified Flag must retain this license notice and provide appropriate attribution to the original source.

3. The Flag may be distributed, copied, or shared with others, both in its original form or modified, provided that this license notice is maintained and any additional terms or conditions imposed by the CTF competition organizers are also respected.

4. The Flag shall not be used for any malicious or illegal activities. It should only be employed within the context of legitimate computer security competitions or educational purposes. The user shall be solely responsible for any misuse or unauthorized use of the Flag.

5. By the way, License key format is 12345678-abcdef00-00fedcba-98765432 (hex format blocks).

6. Any trademarks, service marks, or logos associated with the Flag or the CTF competition it belongs to remain the property of their respective owners. This license does not grant any rights to use such trademarks, service marks, or logos without explicit permission.

By obtaining, using, or distributing the CTF Flag, you agree to abide by the terms and conditions of this license.</value>
  </data>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAMDAAAAEACACoDgAANgAAACAgAAABAAgAqAgAAN4OAAAQEAAAAQAIAGgFAACGFwAAKAAAADAA
        AABgAAAAAQAIAAAAAAAACQAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA
        /wAAAP8AAAD/AAAA/wAAAP8AAAD/ABAQ/wAgIP8AMDD/AEBA/wBPT/8AX1//AGBg/wBwcP8Af3//AICA
        /wCQkP8An5//AKCg/wCvr/8Av7//AM/P/wDf3/8A7+//AP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEHCAoLCwsLCwsLCwsLCwsLCwsL
        CwsLCwsLCwsLCwsLCwsLCwsLCwsKCQUCAAAABAsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsL
        CwsLCwsLCwsLCwsLBAACCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsL
        CwEFCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwYJCwsLCwsLCwsL
        CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwgKCwsLCwsLCwsLCwsLCwsLCwsLCwsL
        CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwoLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsL
        CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsL
        CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsM
        DQ0NDQsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsVHh4eGgsLCwsLCwsL
        CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsVHh4eGgsLCwsLCwsLCwsLCwsLCwsLCwsL
        CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsVHh4eGgsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsL
        CwsLCwsLCwsLCwsVHh4eGgsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsV
        Hh4eGgsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsVHh4eGgsLCw8PDgwL
        CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsVHh4eGgwWHB4eHh4aDgsLCwsLCwsLEhoc
        Hh4eHh4LCwsLCwsLCwsLCwsLCwsLCwsVHh4eHBweHh4eHh4eHhILCwsLCw0cHh4eHh4eHh4LCwsLCwsL
        CwsLCwsLCwsLCwsVHh4eHh4eHh4eHh4eHh4PCwsLCxoeHh4eHh4eHh4LCwsLCwsLCwsLCwsLCwsLCwsV
        Hh4eHh4eGxkaHh4eHh4cCwsLDx4eHh4eHh4eHh4LCwsLCwsLCwsLCwsLCwsLCwsVHh4eHh0RCwsLDRse
        Hh4eEAsLFh4eHh4UDQsLCwsLCwsLCwsLCwsLCwsLCwsLCwsVHh4eHhMLCwsLCw0cHh4eFwsLGR4eHhoL
        CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsVHh4eHQsLCwsLCwsYHh4eGwsLGh4eHhULCwsLCwsLCwsLCwsL
        CwsLCwsLCwsLCwsVHh4eGgsLCwsLCwsSHh4eHAsLGh4eHhULCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsV
        Hh4eGgsLCwsLCwsSHh4eHAsLGh4eHhULCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsVHh4eHAsLCwsLCwsW
        Hh4eHAsLGh4eHhULCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsVHh4eHhELCwsLCwwdHh4eFwsLGh4eHhUL
        CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsVHh4eHh0PCwsLDRseHh4eDwsLGh4eHhULCwsLCwsLCwsLCwsL
        CwsLCwsLCwsLCwsVHh4eHh4eGhcZHh4eHh4cCwsLGh4eHh0cHBwcHBwLCwsLCwsLCwsLCwsLCwsLCwsV
        Hh4eHh4eHh4eHh4eHh4PCwsLGh4eHh4eHh4eHh4LCwsLCwsLCwsLCwsLCwsLCwsVHh4eHBweHh4eHh4e
        HhQLCwsLGh4eHh4eHh4eHh4LCwsLCwsLCwsLCwsLCwsLCwsVHh4eGgwUHR4eHh4aDQsLCwsLGh4eHh4e
        Hh4eHh4LCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLDA4SDw0LCwsLCwsLGh4eHhULCwsLCwsLCwsLCwsL
        CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLGh4eHhULCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsL
        CwsLCwsLCwsLCwsLCwsLCwsLGh4eHhULCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsL
        CwsLCwsLGh4eHhULCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLGh4eHhUL
        CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLGh4eHhULCwsLCwsLCwsLCwsL
        CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLDQ0NDQwLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsL
        CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsL
        CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsL
        CwsLCwsLCwsLCwsLCwsKCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsL
        CwoICwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwkHCwsLCwsLCwsL
        CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwUBCwsLCwsLCwsLCwsLCwsLCwsLCwsL
        CwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwIAAwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsL
        CwsLCwsLCwsLCwsLAwAAAAIFCQoLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsKCAYB
        AADAAAAAAAMAAIAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIAAAAAAAQAAwAAAAAADAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAEAAAAAAAAAAAAAAAB
        AAAAAQAAAAAAAAAA/wAAAP8AAAD/AAAA/wAAAP8AEBD/ACAg/wAwMP8AQED/AF9f/wBvb/8AcHD/AICA
        /wCPj/8An5//AKCg/wCvr/8Av7//AM/P/wDf3/8A7+//AP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAACAwQFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUEAwEAAgUFBQUFBQUFBQUFBQUFBQUF
        BQUFBQUFBQUFBQUFBQEDBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFAwQFBQUFBQUFBQUFBQUF
        BQUFBQUFBQUFBQUFBQUFBQUEBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF
        BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRYWFAUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF
        FhYUBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUWFhQFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF
        BQUFBRYWFAUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFFhYUBxATFBEJBQUFBQUHERUWFhYHBQUF
        BQUFBQUFBQUWFhUUFhYWFhYNBQUFCBUWFhYWFgcFBQUFBQUFBQUFBRYWFhYUEhUWFhYHBQUSFhYUEQ8P
        BgUFBQUFBQUFBQUFFhYWDwUFBhEWFg8FBRUWFgcFBQUFBQUFBQUFBQUFBQUWFhUGBQUFBxYWEwUFFhYU
        BQUFBQUFBQUFBQUFBQUFBRYWFAUFBQUFFBYWBQUWFhQFBQUFBQUFBQUFBQUFBQUFFhYVBQUFBQUVFhUF
        BRYWFAUFBQUFBQUFBQUFBQUFBQUWFhYMBQUFDBYWEgUFFhYUBQUFBQUFBQUFBQUFBQUFBRYWFhYPCxAW
        FhYKBQUWFhUPDw8PBgUFBQUFBQUFBQUFFhYWFhYWFhYWEgUFBRYWFhYWFhYHBQUFBQUFBQUFBQUWFhQL
        FRYWFg4FBQUFFhYWFhYWFgcFBQUFBQUFBQUFBQUFBQUFBwgFBQUFBQUWFhQFBQUFBQUFBQUFBQUFBQUF
        BQUFBQUFBQUFBQUFBRYWFAUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFFhYUBQUFBQUFBQUFBQUF
        BQUFBQUFBQUFBQUFBQUFBQUWFhQFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF
        BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF
        BQUFBQUFBAUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQQDBQUFBQUFBQUFBQUFBQUFBQUFBQUF
        BQUFBQUFBQUFAwIFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUBAAIDBAUFBQUFBQUFBQUFBQUF
        BQUFBQUFBQUFBQQDAQCAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAgAAAASgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAB
        AAAAAP8AAAD/AAAA/wAAAP8AEBD/ACAg/wBAQP8AYGD/AG9v/wBwcP8AgID/AI+P/wCfn/8Av7//AM/P
        /wDf3/8A7+//AP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAQIDAwMDAwMDAwMDAwMCAQIDAwMDAwMDAwMDAwMDAwIDAwMDAwMDAwMDAwMDAwMDAwMDEQcD
        AwMDAwMDAwMDAwMDAxEHAwMDAwMDBAUEAwMDAwMRDQ8QCQMEDRERBgMDAwMDEQ8HCxEGBxEJBgQDAwMD
        AxEJAwMQCgcRAwMDAwMDAwMRDAMFEQkHEQUFBAMDAwMDEREODw8EBxEREQYDAwMDAwoGCAoFAwcRBgYE
        AwMDAwMDAwMDAwMHEQMDAwMDAwMDAwMDAwMDBAYDAwMDAwMDAwMDAwMDAwMDAwMDAwMCAwMDAwMDAwMD
        AwMDAwMCAAIDAwMDAwMDAwMDAwMCAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>